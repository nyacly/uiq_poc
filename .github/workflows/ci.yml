name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  LIGHTHOUSE_PREVIEW_URL: ${{ vars.LIGHTHOUSE_PREVIEW_URL }}

jobs:
  tests:
    name: Unit & E2E Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: uiq_ci
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d uiq_ci"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/uiq_ci
      POSTGRES_URL: postgresql://postgres:postgres@localhost:5432/uiq_ci
      POSTGRES_CONNECTION_STRING: postgresql://postgres:postgres@localhost:5432/uiq_ci
      NEXTAUTH_URL: http://localhost:5000
      NEXTAUTH_SECRET: integration-test-secret
      NEXT_PUBLIC_SITE_URL: http://localhost:5000
      STRIPE_SECRET_KEY: sk_test_placeholder
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_placeholder
      STRIPE_WEBHOOK_SECRET: whsec_placeholder
      TWILIO_ACCOUNT_SID: AC00000000000000000000000000000000
      TWILIO_AUTH_TOKEN: placeholder
      TWILIO_PHONE_NUMBER: '+15005550006'
      ENABLE_REGISTRATION: 'true'
      ENABLE_PAYMENTS: 'true'
      ENABLE_SMS_NOTIFICATIONS: 'false'
      NODE_ENV: test
      PORT: '5000'
      PGSSLMODE: disable
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run database migrations
        run: npx drizzle-kit migrate

      - name: Seed database
        run: npx tsx scripts/seed.ts

      - name: Run unit tests
        run: npm run test -- --runInBand

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests (headless)
        run: npm run test:e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: ignore

  lighthouse:
    name: Lighthouse (preview)
    needs: tests
    if: ${{ env.LIGHTHOUSE_PREVIEW_URL != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Prepare Lighthouse config
        run: |
          cat <<'CONFIG' > preview-lighthouserc.json
          {
            "ci": {
              "collect": {
                "url": ["${LIGHTHOUSE_PREVIEW_URL}"],
                "numberOfRuns": 3,
                "settings": {
                  "preset": "desktop"
                }
              },
              "upload": {
                "target": "temporary-public-storage"
              }
            }
          }
          CONFIG

      - name: Run Lighthouse CI
        run: npx lhci autorun --config=preview-lighthouserc.json
        env:
          LIGHTHOUSE_PREVIEW_URL: ${{ env.LIGHTHOUSE_PREVIEW_URL }}
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Upload Lighthouse reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: .lighthouseci
          if-no-files-found: ignore
